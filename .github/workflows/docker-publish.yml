name: Docker

on:
  pull_request:
  push:
    branches: main

env:
  RELEASE_BRANCH: main
  REGISTRY: ghcr.io
  IMAGE_NAME: docker-alpine-aws-cli
  PLATFORMS: "linux/amd64,linux/arm64"

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    strategy:
      matrix:
        tag:
          # To keep the number of builds low, we only keep the latest two versions of the AWS CLI
          - 2.15.14-3.18
          - 2.15.14-3.17
          - 2.15.14-3.16
          - 2.15.0-3.18
          - 2.15.0-3.17
          - 2.15.0-3.16
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get variables
        id: vars
        run: |
          echo "latest_image_tag=$(make print-latest-image-tag)" >> "$GITHUB_OUTPUT"
          echo "aws_cli_version=$(echo "${{ matrix.tag }}" | awk '{split($0,a,"-"); print a[1]}')" >> "$GITHUB_OUTPUT"
          echo "alpine_version=$(echo "${{ matrix.tag }}" | awk '{split($0,a,"-"); print a[2]}')" >> "$GITHUB_OUTPUT"
          echo "static_tag=$(echo "${{ matrix.tag }}" | awk '{split($0,a,"-"); print a[1]}')-alpine$(echo "${{ matrix.tag }}" | awk '{split($0,a,"-"); print a[2]}')" >> "$GITHUB_OUTPUT"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.vars.outputs.static_tag }},enable=${{ github.ref == format('refs/heads/{0}', env.RELEASE_BRANCH) }}
            # set latest tag for main branch and if the static_tag is the latest version configured in the Makefile
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', env.RELEASE_BRANCH) && steps.vars.outputs.static_tag == steps.vars.outputs.latest_image_tag }}
            type=sha,format=long,prefix=${{ steps.vars.outputs.static_tag }}-

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          load: true
          push: false
          context: .
          build-args: |
            AWS_CLI_VERSION=${{ steps.vars.outputs.aws_cli_version }}
            ALPINE_VERSION=${{ steps.vars.outputs.alpine_version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    if: contains('["refs/heads/main", "refs/heads/master"]', github.ref)
    strategy:
      matrix:
        tag:
          # To keep the number of builds low, we only keep the latest two versions of the AWS CLI
          - 2.15.14-3.18
          - 2.15.14-3.17
          - 2.15.14-3.16
          - 2.15.0-3.18
          - 2.15.0-3.17
          - 2.15.0-3.16
    steps:
      - uses: actions/checkout@v4

      # We use commit sha here to be as safe as possible with credentials.
      - name: Log in to the Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get variables
        id: vars
        run: |
          echo "latest_image_tag=$(make print-latest-image-tag)" >> "$GITHUB_OUTPUT"
          echo "aws_cli_version=$(echo "${{ matrix.tag }}" | awk '{split($0,a,"-"); print a[1]}')" >> "$GITHUB_OUTPUT"
          echo "alpine_version=$(echo "${{ matrix.tag }}" | awk '{split($0,a,"-"); print a[2]}')" >> "$GITHUB_OUTPUT"
          echo "static_tag=$(echo "${{ matrix.tag }}" | awk '{split($0,a,"-"); print a[1]}')-alpine$(echo "${{ matrix.tag }}" | awk '{split($0,a,"-"); print a[2]}')" >> "$GITHUB_OUTPUT"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.vars.outputs.static_tag }},enable=${{ github.ref == format('refs/heads/{0}', env.RELEASE_BRANCH) }}
            # set latest tag for main branch and if the static_tag is the latest version configured in the Makefile
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', env.RELEASE_BRANCH) && steps.vars.outputs.static_tag == steps.vars.outputs.latest_image_tag }}
            type=sha,format=long,prefix=${{ steps.vars.outputs.static_tag }}-

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: ${{ env.PLATFORMS }}
          context: .
          build-args: |
            AWS_CLI_VERSION=${{ steps.vars.outputs.aws_cli_version }}
            ALPINE_VERSION=${{ steps.vars.outputs.alpine_version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
